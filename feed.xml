<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://katus98.github.io/</id><title>SUN Katus' Blog</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-09-14T15:15:02+08:00</updated> <author> <name>SUN Katus</name> <uri>https://katus98.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://katus98.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://katus98.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 SUN Katus </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Mybatis的Spring插件扫描原理</title><link href="https://katus98.github.io/posts/mybatis-spring-scanner/" rel="alternate" type="text/html" title="Mybatis的Spring插件扫描原理" /><published>2022-09-12T11:16:17+08:00</published> <updated>2022-09-14T15:14:27+08:00</updated> <id>https://katus98.github.io/posts/mybatis-spring-scanner/</id> <content src="https://katus98.github.io/posts/mybatis-spring-scanner/" /> <author> <name>katus</name> </author> <category term="Spring" /> <summary> 本文主要针对Mybatis的Spring插件的扫描进行分析，从MapperScan注解切入，进行源码层面的简要解读。 一、@MapperScan注解 @MapperScan是Mybatis的Spring插件的核心扫描配置，其通过Spring配置的@Import注解注册其核心配置。 package org.mybatis.spring.annotation; @Retention(RetentionPolicy.RUNTIME) @Target(ElementType.TYPE) @Documented @Import(MapperScannerRegistrar.class) @Repeatable(MapperScans.class) public @interface MapperScan { // 省略了注解成员 } ... </summary> </entry> <entry><title>信号量机制</title><link href="https://katus98.github.io/posts/semaphore/" rel="alternate" type="text/html" title="信号量机制" /><published>2022-08-16T00:54:08+08:00</published> <updated>2022-08-16T00:54:08+08:00</updated> <id>https://katus98.github.io/posts/semaphore/</id> <content src="https://katus98.github.io/posts/semaphore/" /> <author> <name>katus</name> </author> <category term="Operating System" /> <summary> 一、信号量概述 1.概念 用户进程可以通过使用操作系统提供的一对原语来对信号量进行操作，从而很方便的实现了进程互斥、进程同步。 信号量其实就是一个变量（可以是一个整数，也可以是更复杂的记录型变量），可以用一个信号量来表示系统中某种资源的数量，比如：系统中只有一台打印机，就可以设置一个初值为1的信号量。 原语是一种特殊的程序段，其执行只能一气呵成，不可被中断。原语是由关中断和开中断指令实现的。 一对原语：wait(S)原语和signal(S)原语，可以把原语理解为我们自己写的函数，函数名分别为wait和signal，括号里的信号量S其实就是函数调用时传入的一个参数。wait、signal原语常简称为P、V操作（来自荷兰语proberen和verhogen）。因此，常把wait(S)、signal(S)两个操作分别写为P(S)、V(S)。 2.类别 整型信号... </summary> </entry> <entry><title>Linux服务器多网卡多网关配置解决方案</title><link href="https://katus98.github.io/posts/linux-multi-gateway-config/" rel="alternate" type="text/html" title="Linux服务器多网卡多网关配置解决方案" /><published>2021-08-19T11:14:51+08:00</published> <updated>2021-08-19T11:14:51+08:00</updated> <id>https://katus98.github.io/posts/linux-multi-gateway-config/</id> <content src="https://katus98.github.io/posts/linux-multi-gateway-config/" /> <author> <name>katus</name> </author> <category term="Operations" /> <summary> 本文为本人尝试修复实验室Linux服务器网络的过程中的经验总结，如有错误，还望不吝赐教。 一、网络情况 软硬件条件 硬件条件 服务器四台 每台服务器有万兆网卡2块（光纤口）、千兆网卡2块（RJ45） 交换机、路由器、网线若干 入户网线1条 软件条件 服务器操作系统：CentOS 8 入户网线可以通过L2TP登录校园网进而访问互联网 校园网内的固定IP四个 预期效果 四台服务器之间通过万兆网卡组合局域网，网段192.168.1.0\24 四台服务器的其中一个千兆网卡各持有一个校园网固定IP，用于远程访问，网段10.79.224.0/21 四台服务器均需要访问互联网，由于服务器本身的L2TP拨号需要占用四个上网账号且不稳定，计划将L2TP的上网账号配置在路由器，形成新的局域网，进而上网，局域网网段192.168.1... </summary> </entry> <entry><title>Java开发技术之多线程</title><link href="https://katus98.github.io/posts/java-thread/" rel="alternate" type="text/html" title="Java开发技术之多线程" /><published>2020-08-14T19:53:17+08:00</published> <updated>2022-08-17T22:17:35+08:00</updated> <id>https://katus98.github.io/posts/java-thread/</id> <content src="https://katus98.github.io/posts/java-thread/" /> <author> <name>katus</name> </author> <category term="Java" /> <summary> 暑假期间，个人对一些未来研究生阶段可能会常用的编程技术进行重新一轮的系统复习和学习，及希望能够查缺补漏，有所提升。本文也是作为复习和学习过程中的笔记，用于长久的记录。不排除其中可能含有部分疏漏和错误，如有发现，希望各位能够批评指正，谢谢。 一、多线程概述 （一）概述 每个进程有独立的方法区、堆空间、虚拟机栈和程序计数器。 一个进程可能拥有多个线程。 每个线程有独立的虚拟机栈和程序计数器，但是一个进程下的多线程共享方法区和堆空间。 （二）线程的优先级 线程存在优先级，优先级越高，CPU将资源分配到该线程的可能性越大，但是这并不意味着高优先级的线程一定先运行。 Java线程优先级分为十个级别，从1~10（整数），默认是5。 最低优先级Thread.MIN_PRIORITY（1） 默认优先级Thread.NORM... </summary> </entry> <entry><title>Java基础开发技术查缺补漏笔记</title><link href="https://katus98.github.io/posts/java-adv/" rel="alternate" type="text/html" title="Java基础开发技术查缺补漏笔记" /><published>2020-08-12T21:08:07+08:00</published> <updated>2020-08-12T21:08:07+08:00</updated> <id>https://katus98.github.io/posts/java-adv/</id> <content src="https://katus98.github.io/posts/java-adv/" /> <author> <name>katus</name> </author> <category term="Java" /> <summary> 暑假期间，个人对一些未来研究生阶段可能会常用的编程技术进行重新一轮的系统复习和学习，及希望能够查缺补漏，有所提升。本文也是作为复习和学习过程中的笔记，用于长久的记录。不排除其中可能含有部分疏漏和错误，如有发现，希望各位能够批评指正，谢谢。 一、准备工作 JDK版本：1.8.0_261（Java HotSpot TM） （一）Java 文档注释 /** * @auther katus * @version v1.0 * 这是一个文档注释，是Java所特有的，可以被javadoc所解析。 */ 文档注释可以通过javadoc命令直接生成到技术文档中。 javadoc -d dirname -author -version xxx.java 二、Java 基本语法 Java代码采用Unicode编码，因此可以使用任意Unicode编码作为标识符，... </summary> </entry> </feed>
